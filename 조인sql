SELECT a.employee_id, b.employee_id
FROM employees a, employees b; -- 오라클 전용 조인방법, 가독성 떨어짐.

SELECT a.employee_id, b.employee_id
FROM employees a, employees b
WHERE  a.employee_id = b.employee_id; -- 일반조건인지 , 조인에 관한구분인지 구분이 어려움.
----------------------------------------
SELECT employee_id, department_id From employees;
-- 사원의 사번, 성명, 부서번호, 부서명을 출력하시오
SELECT employee_id, first_name, last_name, e.department_id, department_name
FROM employees e, departments d
WHERE e.department_id= d.department_id;
-----------------

--표준화된 JOIN
--Natural Join
SELECT employee_id, first_name, last_name
       department_id, department_name
FROM employees NATURAL JOIN departments; -- natural join 은 컬럼명이 서로 같을때만 할수 있음. 한개만 같을떄 사용. 두개이상일경우는 두개다 포함이라서 위험. 
-- 별칭x 별칭.컬럼명쓰기가 불가능함

--Join USING절 
SELECT employee_id, first_name, last_name
       department_id, department_name
FROM employees JOIN departments USING(department_id); -- 같은이름의 컬럼이 많을때는 using절을 사용, 별칭x 별칭.컬럼명쓰기가 불가능함

-- Join ON
SELECT employee_id, first_name, last_name
       ,e.department_id, department_name
FROM employees e JOIN departments d
ON (e.department_id = d.department_id); -- on절이 가장안전.

-- 사원의 사번, 이름, 부서번호, 부서명, 부서가 속한 도시명을 출력하시오
SELECT e.employee_id, e.first_name
,d.department_id,department_name
,l.city
FROM employees e 
JOIN departments d ON(e.department_id = d.department_id)
JOIN locations l ON(d.location_id = l.location_id);

-- 사원의 사번, 이름, 부서명, 직무명을 출력하시오
SELECT e.employee_id, e.first_name
,d.department_name , j.job_title
FROM employees e 
JOIN departments d ON(e.department_id = d.department_id)
JOIN jobs j ON(e.job_id = j.job_id);

SELECT employee_id, first_name -- 3개의 테이블을 using 이나 natural등 혼용에서 쓰면 정확환 결과가 안나옴. using, 네츄럴 두테이블 조인할때 씀.
,department_name , job_title
FROM employees 
JOIN departments USING (department_id)
NATURAL JOIN jobs;

-- 부서가 속한 도시들을 중복없이 부서명, 도시명 출력하시오
SELECT department_name, city
FROM departments NATURAL JOIN locations;

-- SELF JOIN 
-- 사번, 성명, 관리자번호
SELECT e.employee_id 사번, e.first_name || ' ' || e.last_name 성명, e.manager_id 관리자번호,m.first_name||' ' ||m.last_name 관리자성명 
FROM employees e JOIN employees m ON(e.manager_id = m.employee_id);

-- 급여가 5000이상인 사원의 사번, 성명, 관리자번호, 관리자성명을 출력하시오
SELECT e.employee_id 사번, e.first_name || ' ' || e.last_name 성명, e.manager_id 관리자번호,m.first_name||' ' ||m.last_name 관리자성명 
FROM employees e JOIN employees m ON(e.manager_id = m.employee_id)
WHERE e.salary>=5000;

-- 급여가 5000이상인 사원의 사번, 성명, 관리자번호, 관리자성명을 출력하시오
SELECT e.employee_id 사번, e.first_name || ' ' || e.last_name 성명, e.manager_id 관리자번호,m.first_name||' ' ||m.last_name 관리자성명 
FROM employees e JOIN employees m ON(e.manager_id = m.employee_id)
AND e.salary>=5000; --권장은 x 

-- 오라클전용 JOIN
SELECT e.employee_id 사번, e.first_name || ' ' || e.last_name 성명, e.manager_id 관리자번호,m.first_name||' ' ||m.last_name 관리자성명 
FROM employees e, employees m
WHERE e.manager_id = m.employee_id
AND e.salary >= 5000;


-- 사원과 관리자가 다른 부서에서 근무하는 사원들의 
-- 사번, 성명,부서명, 관리자번호, 관리자성명, 관리자부서명을 출력하시오.
SELECT e.employee_id 사번, e.first_name || ' ' || e.last_name 성명, e.manager_id 관리자번호,m.first_name||' ' ||m.last_name 관리자성명,
d.department_name 관리자부서명 ,d2.department_name 부서명
FROM employees e JOIN employees m ON(e.manager_id = m.employee_id)
JOIN departments d ON(e.department_id = d.department_id)
JOIN departments d2 ON(d.department_id = d2.department_id)
WHERE e.department_id<>m.department_id;

-- 관리자 급여보다 많은 급여를 받는 사원의 
-- 사번, 성명, 급여, 관리자번호, 관리자성명, 관리자급여를 출력하시오
SELECT e.employee_id 사번, e.first_name || ' ' || e.last_name 성명, e.manager_id 관리자번호,m.first_name||' ' ||m.last_name 관리자성명,
e.salary 급여, m.salary 관리자급여
FROM employees e JOIN employees m ON(e.manager_id = m.employee_id)
WHERE e.salary > m.salary ;

-- 사원의 사번, 부서번호, 부서명을 출력하시오 -- 106개
SELECT employee_id, e.department_id, department_name
FROM employees e INNER JOIN departments d ON (e.department_id = d.department_id);

-- OUTER JION
-- 사원의 사번, 부서번호ㅡ 부서명을 출력하시오 -- 107건
-- 부서배치받지 않은 사원도 출력한다
SELECT employee_id, e.department_id, department_name
FROM employees e LEFT JOIN departments d ON (e.department_id = d.department_id);

--오라클전용 OUTER JOIN
SELECT employee_id, e.department_id, department_name
FROM employees e, departments d
WHERE e.department_id = d.department_id(+);

-- 부서번호, 부서명, 도시명을 출력하시오
-- 부서가 없는 도시도  출력한다 
SELECT department_name, city
FROM departments d RIGHT JOIN locations l ON (d.location_id = l.location_id);

SELECT NVL(department_name, '부서없음'), city
FROM departments d RIGHT JOIN locations l ON (d.location_id = l.location_id);

SELECT department_id, location_id FROM departments;

-- FULL OUTER JOIN
-- 사번, 부서번호, 부서명을 출력하시오
-- 사원이 없는 부서도, 부서가 없는 사웓도 모두 출력한다
SELECT employee_id, d.department_id, d.department_name
FROM employees e FULL JOIN departments d ON (e.department_id = d.department_id);

--오라클 전용 FULL JOIN은 안됨.
SELECT employee_id, d.department_id, d.department_name
FROM employees e, departments d 
WHERE e.department_id (+) = d.department_id(+);

